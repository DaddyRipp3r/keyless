--[[──────────────────────────────────────────────────────────────────
To Do:
- Fix x etc
- 


Bugs:
- When doing x, x happens
- 


Ideas:
- wonder if i can do x etc


Suggestions:
- someone suggested x etc


──────────────────────────────────────────────────────────────────]]





------------------------------------------
--messagebox("Ripp3rs-Hub Successully Loaded", "Successully Loaded", 0)
------------------------------------------


-- script version
local scriptver = "Keyless"

-- library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Ripp3rs-hub ┃ ".. scriptver, HidePremium = true, SaveConfig = true, ConfigFolder = "Ripp3r", IntroText = "Ripp3rs-Hub", IntroIcon = "rbxassetid://6034227061"})





--------------   tabs   --------------
-- Player Tab
local PlayerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://",
    PremiumOnly = false
})

-- World
local WorldTab = Window:MakeTab({
	Name = "World",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

-- Dupe
local DupeTab = Window:MakeTab({
	Name = "Dupe",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

-- GUI Settings
--local SettingsTab = Window:MakeTab({
--	Name = "Gui-Settings",
--	Icon = "rbxassetid://",
--	PremiumOnly = false
--})

-- Wood
local WoodTab = Window:MakeTab({
	Name = "Wood",
	Icon = "rbxassetid://",
	PremiumOnly = false
})


-- Credits
local CreditTab = Window:MakeTab({
	Name = "Credits",
	Icon = "rbxassetid://",
	PremiumOnly = false
})

-- Credits
local SettingsTab = Window:MakeTab({
	Name = "Settings",
	Icon = "rbxassetid://",
	PremiumOnly = false
})
--------------   tabs   --------------





-------------- Sections --------------
-- Player
local PlayerSec = PlayerTab:AddSection({
    Name = "Player"
})

--- Sky Options
--local SkyOptions = WorldTab:AddSection({
--	Name = "Sky Options"
--})

--- EnvOptions Options
local EnvOptions = WorldTab:AddSection({
	Name = "Environment Options"
})


--- Graphic Options
local GraphicOptions = WorldTab:AddSection({
	Name = "Graphic Options"
})


-- Auto Maxland Dupe
local AutoMaxlandDupe = DupeTab:AddSection({
	Name = "Maxland dupe Auto"
})

-- Manual Maxland Dupe
local ManualDupe = DupeTab:AddSection({
	Name = "Maxland Dupe Manual"
})

-- Dupe Claim Tools
local ClaimTools = DupeTab:AddSection({
	Name = "Claim Tools"
})


local WoodSec = WoodTab:AddSection({
    Name = "Wood"
})

local CreditSec = CreditTab:AddSection({
    Name = "Credits"
})

local SettingsSec = SettingsTab:AddSection({
    Name = "Settings"
})
-------------- Sections --------------





-- Walk Speed
PlayerSec:AddSlider({
    Name = "Walk Speed",
    Min = 16,
    Max = 500,
    Default = 16,
    Color = Color3.fromRGB(0,0,0),
    Increment = 1,
    ValueName = "",
    Callback = function(new)
    _G.WS = new;
    local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid;
    Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        Humanoid.WalkSpeed = _G.WS;
    end)
    Humanoid.WalkSpeed = _G.WS;
    end
})





-- Jump Power
PlayerSec:AddSlider({
    Name = "Jump Power",
    Min = 50,
    Max = 500,
    Default = 50,
    Color = Color3.fromRGB(0,0,0),
    Increment = 1,
    ValueName = "",
    Callback = function(value)
        _G.JP = value
        local Humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid
        Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        Humanoid.JumpPower = _G.JP
        end)
        Humanoid.JumpPower = _G.JP
    end
})





-- Field Of View
PlayerSec:AddSlider({
	Name = "FOV",
	Min = 70,
	Max = 140,
	Default = 70,
	Color = Color3.fromRGB(255, 255, 255),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		game:GetService("Workspace").Camera.FieldOfView = (Value)
	end
})





-- Fly Speed
local FlightTriggerKey = "q"-- flight key
local CurrentlyFlying = false
PlayerSec:AddSlider({
Name = "Flight Speed",
Min = 1,
Max = 1000,
Default = 150,
Color = Color3.fromRGB(255, 255, 255), -- customizable slider color btw idk if you knew that, default at white
Increment = 1,
ValueName = "",
Callback = function(Value)
maxspeed = Value
function PlayerFlightUwU()
repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Head") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
local mouse = game.Players.LocalPlayer:GetMouse()
repeat wait() until mouse
local plr = game.Players.LocalPlayer
local torso = plr.Character.Head
local flying = false
local deb = true
local ctrl = {f = 0, b = 0, l = 0, r = 0}
local lastctrl = {f = 0, b = 0, l = 0, r = 0}
local speed = 5000

function Fly()
local bg = Instance.new("BodyGyro", torso)
bg.P = 9e4 
bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
bg.cframe = torso.CFrame 
local bv = Instance.new("BodyVelocity", torso)
bv.velocity = Vector3.new(0,0.1,0)
bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
repeat wait()
plr.Character.Humanoid.PlatformStand = true
if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
speed = maxspeed
elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
speed = 0
end
if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*0.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
else
bv.velocity = Vector3.new(0,0,0)
end
bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*speed/maxspeed),0,0)
until not flying
ctrl = {f = 0, b = 0, l = 0, r = 0}
lastctrl = {f = 0, b = 0, l = 0, r = 0}
speed =Range
bg:Destroy()
bv:Destroy()
plr.Character.Humanoid.PlatformStand = false
end
mouse.KeyDown:connect(function(key) 
if key:lower() == FlightTriggerKey and CurrentlyFlying == true then
if flying then
flying = false
else
flying = true
Fly()
end
elseif key:lower() == "w" then
ctrl.f = 1
elseif key:lower() == "s" then
ctrl.b = -1
elseif key:lower() == "a" then
ctrl.l = -1
elseif key:lower() == "d" then
ctrl.r = 1
end
end)
mouse.KeyUp:connect(function(key)
if key:lower() == "w" then
ctrl.f = 0
elseif key:lower() == "s" then
ctrl.b = 0
elseif key:lower() == "a" then
ctrl.l = 0
elseif key:lower() == "d" then
ctrl.r = 0
end
end)
Fly()
end
game.Players.LocalPlayer.CharacterAdded:Connect(PlayerFlightUwU)
PlayerFlightUwU()
 end
})





-- No Clip
local noclipping = false

function toggleNoClip()
    local disableCollide 
    disableCollide = game:GetService("RunService").Stepped:connect(function()
        for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if noclipping == false then
                disableCollide:Disconnect()
                return
            end
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
    end)
end

PlayerSec:AddToggle({
     Name = "Noclip",
     Default = false,
     Callback = function(Value)
     if Value then
         noclipping = true
         toggleNoClip()
     else
         noclipping = false
         toggleNoClip()
     end
end
})





-- Fly Toggle
PlayerSec:AddToggle({
    Name = "Flight",
    Default = false,
    Callback = function(Value)
    CurrentlyFlying = Value
    end
})





-- Infinite Jump
PlayerSec:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(value)
    if value then
    getgenv().ifj = true
    connection = game:GetService("UserInputService").JumpRequest:connect(function()
    if not getgenv().ifj then connection:disconnect() end
    game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end)
    else
    getgenv().ifj = false
    end
end
})





EnvOptions:AddLabel("Do not enable always day / always night at same time.")
local TODRequirements = {
    TODConfig = {
        AlwaysDay = false,
        AlwaysNight = false,
        NoFog = false,
        Spook = false,
        Tables = {
            UIVars = {
                AD = nil,
                AN = nil,
            },
        },
    },
}

local spookChangedConn = nil -- define the connection variable

game.Lighting.Changed:Connect(function()
    if TODRequirements.TODConfig.AlwaysDay then
        game.Lighting.TimeOfDay = "12:00:00"
        if game:GetService"Lighting":FindFirstChild"SunPos" then
            game.Lighting.SunPos.Value = 1
        end
    end
    if TODRequirements.TODConfig.AlwaysNight then
        game.Lighting.TimeOfDay = "24:00:00"
        if game:GetService"Lighting":FindFirstChild"SunPos" then
            game.Lighting.SunPos.Value = -1
        end
    end
    if TODRequirements.TODConfig.NoFog then
        game.Lighting.FogEnd = 100000
        game.Lighting.FogColor = Color3.fromRGB(255, 255, 255)
        game.Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
        local colorCorrection = game.Lighting:FindFirstChildOfClass("ColorCorrectionEffect")
        if colorCorrection then
            colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
        end
    end
    -- Disconnect the spookChangedConn before setting game.Lighting.Spook.Value
    if spookChangedConn then
        spookChangedConn:Disconnect()
    end
    if TODRequirements.TODConfig.Spook then
        game.Lighting.Spook.Value = true
    else
        game.Lighting.Spook.Value = false
    end
    -- Reconnect the spookChangedConn after setting game.Lighting.Spook.Value
    spookChangedConn = game.Lighting.Spook.Changed:Connect(function()
        TODRequirements.TODConfig.Spook = game.Lighting.Spook.Value
    end)
end)

TODRequirements.TODConfig.Tables.UIVars.AD = EnvOptions:AddToggle({	Name = "Always Day",	Default = false,	Callback = function(Value)    TODRequirements.TODConfig.AlwaysDay = Value	end})
    if TODRequirements.TODConfig.AlwaysNight and Value then
        TODRequirements.TODConfig.Tables.UIVars.AN:Set(false)
    end
    TODRequirements.TODConfig.AlwaysDay = Value


TODRequirements.TODConfig.Tables.UIVars.AN = EnvOptions:AddToggle({	Name = "Always Night",	Default = false,	Callback = function(Value)    TODRequirements.TODConfig.AlwaysNight = Value	end})
    if TODRequirements.TODConfig.AlwaysDay and Value then
        TODRequirements.TODConfig.Tables.UIVars.AD:Set(false)
    end
    TODRequirements.TODConfig.AlwaysNight = Value





EnvOptions:AddToggle({
	Name = "No Fog",
	Default = false,
	Callback = function(Value)
    TODRequirements.TODConfig.NoFog = Value
	end
})





EnvOptions:AddToggle({
	Name = "Global Shadows",
	Default = false,
	Callback = function(Value)
    if Value then
        game:GetService("Lighting").GlobalShadows = false
    else
        game:GetService("Lighting").GlobalShadows = true
    end
end
})





EnvOptions:AddToggle({
	Name = "Solid Water",
	Default = false,
	Callback = function(state)
		if state then
		-- print("".. FuncName.." is on.")
			for i, v in pairs(game.Workspace.Water:GetDescendants()) do
				if v.Name == "Water" then v.CanCollide, state = true
				end
			end
		else
			-- print("".. FuncName.." is off.")
			for i, v in pairs(game.Workspace.Water:GetDescendants()) do
				if v.Name == "Water" then v.CanCollide, state = false
				end
			end
		end
	end
})





-- Better Options
GraphicOptions:AddButton({
	Name = "Better Graphics",
	Callback = function()
		_G.BlurSize = 3
		_G.ColorCorrectionBrightness = 0.03
		_G.ColorCorrectionContrast = 0.3
		_G.ColorCorrectionSaturation = 0.01
		_G.ColorCorrectionTintColor = Color3.fromRGB(244,244,244)
		_G.SunRaysIntensity = 0.2
		_G.SunRaysSpread = 1
		-- Lighting settings:
		_G.GlobalShadows = true
		_G.Brightness = 0.9
		_G.GeographicLatitude = 350
		_G.TimeOfDay = 17
		_G.ExposureCompensation = 0.03
		spawn(function()
		loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\55\110\57\103\53\55\112\50"))()
		end)
	end
})





-- Wood ESP
WoodSec:AddToggle({
	Name = "Wood Esp (work in progress)",
	Default = false,
	Callback = function(Value)
    end
})
OrionLib:MakeNotification({
     Name = "Wood Esp",
     Content = "Enabled Wood Esp",
     Image = "rbxassetid://4483345998",
     Time = 5

})





-- Credits
CreditSec:AddParagraph("Daddy Ripp3r#0001","proprietor and developer of the hub")
CreditSec:AddParagraph("kermit the frog#6253","a highly esteemed acquaintance of mine whom I greatly admire")
CreditSec:AddParagraph("Applebox#0001","devised the key system")
CreditSec:AddParagraph("Nix.#5706", "helped implemented features")





-- dupe
------------------------------------------------------------------------------
-- Automatic Automax land dupe
loadstring([[
function FreeLand()
    for a,b in pairs(workspace.Properties:GetChildren()) do 
        if b:FindFirstChild("Owner") and b:FindFirstChild("OriginSquare") and b.Owner.Value == nil then 
       wait(1)
       game.ReplicatedStorage.PropertyPurchasing.ClientPurchasedProperty:FireServer(b, b.OriginSquare.OriginCFrame.Value.p + Vector3.new(0,3,0))
      for i,v in pairs(game.Workspace.Properties:GetChildren()) do
       if v.Owner.Value == game.Players.LocalPlayer then
      wait(0.1)
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,10,0)
      wait(0.1)
       game.Players.LocalPlayer.Character.Jump = false
      break
      end
      end
      end
      end
      end
]])();


function LoadSlot()
    local LoadSlot = game.ReplicatedStorage.LoadSaveRequests.ClientMayLoad:InvokeServer(player)
        if LoadSlot then
            game.ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(Slot, player)
        end
    end
    





-- Select Slot
AutoMaxlandDupe:AddSlider({
	Name = "Slot",
	Min = 0,
	Max = 6,
	Default = 0,
	Color = Color3.fromRGB(0,0,0),
	Increment = 1,
	ValueName = "",
	Callback = function(new)
		Slot = tonumber(new)
	end
})

-- Time To Teleport
AutoMaxlandDupe:AddTextbox({
	Name = "Time to tp to middle",
	Default = "",
	TextDisappear = false,
	Callback = function(new)
		timetotp = tonumber(new)
	end
})

-- Time Removal
AutoMaxlandDupe:AddTextbox({
	Name = "How much time you would like to take off",
	Default = "",
	TextDisappear = false,
	Callback = function(new)
		timetoremove = tonumber(new)
	end
})

local N=game:GetService("VirtualInputManager")





-- Maxland Dupe
AutoMaxlandDupe:AddButton({
	Name = "Maxland dupe",
		Callback = function()
        print("Loading slot")
        N:SendKeyEvent(true,"Q",false,game)
        wait(0.1) -- free land
        N:SendKeyEvent(true,"T",false,game)
        wait(0.1) -- loads the base
        N:SendKeyEvent(true,"P",false,game) -- kicks from game
        LoadSlot()
  	end    
})
        scr=getsenv(game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.PropertyPurchasingClient);

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()



bind = "q" 



mouse.KeyDown:connect(function(key)
if key == bind then
    repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    wait(1)
    wait(0.9)
    for i,v in next, game:GetService("Workspace").Properties:GetChildren() do
        if v:FindFirstChild("Owner") and v.Owner.Value == nil then
        game:GetService("ReplicatedStorage").PropertyPurchasing.ClientPurchasedProperty:FireServer(v,v.OriginSquare.Position)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,2,0)
        break
        end
    end
end
end)



local player = game.Players.LocalPlayer
local mouse = player:GetMouse()



bind = "p" 



mouse.KeyDown:connect(function(key)
if key == bind then
    repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    wait(1)
    wait(2)
    task.wait(timetotp - 2)
    loadstring(game:GetObjects("rbxassetid://2662507900")[1].Source)()
end
end)


local player = game.Players.LocalPlayer
local mouse = player:GetMouse()



bind = "t" 



mouse.KeyDown:connect(function(key)
if key == bind then
    repeat wait()until game.Players.LocalPlayer.PlayerGui.PropertyPurchasingGUI.SelectPurchase.Visible;
    wait(0.3)
    scr.scrollSelection(-1);
    wait(0.1)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
    scr.scrollSelection(-1);
    wait(0.3)
    scr.selectionMade();
    wait(0.3)
    scr.selectionMade();
    wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();
wait(1)
scr.scrollSelection(-1);
wait(0.3)
scr.selectionMade();
wait(0.3)
scr.selectionMade();                       
end
end)
------------------------------------------------------------------------------





-- Start Manual Dupe
ManualDupe:AddButton({
	Name = "Start manual dupe",
	Callback = function()
        OrionLib:MakeNotification({
         Name = "Ripp3rs Hub",
         Content = 'Once on the loading screen press "Max land dupe step 2"".',
         Image = "rbxassetid://12576176007",
         Time = 5
        })
        Loadslot()
  	end
})

-- Step 2
ManualDupe:AddButton({
	Name = "Manual dupe step 2",
	Callback = function()
        OrionLib:MakeNotification({
            Name = "Ripp3rs Hub",
            Content = 'Please now load your plot and press Max land dupe step 3".',
            Image = "rbxassetid://12576176007",
            Time = 5
        })
        FreeLand()
  	end    
})

-- Step 3
ManualDupe:AddButton({
	Name = "Manual dupe step 3",
	Callback = function()
        wait(timetotp)
        loadstring(game:GetObjects("rbxassetid://2662507900")[1].Source)()
  	end
})





-- Select Plot
ClaimTools:AddButton({
	Name = "Select plot",
	Callback = function()
    loadstring(game:HttpGet("https://pastebin.com/raw/Wj49DUwL"))()-- this has no unselect or disable func btw
  	end 
})

-- Load On Selected Plot
ClaimTools:AddButton({
	Name = "Load on selected plot",
	Callback = function()
        for i,v in next, game:GetService("Workspace").Properties:GetChildren() do
            if v:FindFirstChild("OriginSquare") then
                if v.OriginSquare:FindFirstChild("Selection") then
                game:GetService("ReplicatedStorage").PropertyPurchasing.ClientPurchasedProperty:FireServer(v,v.OriginSquare.Position)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0,2,0)
                break
            end
        end
    end
end
})

ClaimTools:AddButton({
	Name = "Save slot",
	Callback = function()
        local result = false
    repeat
        wait(1)
        getgenv().block_save = false
        local slot_id = game:GetService("Players")["LocalPlayer"]["CurrentSaveSlot"].Value
        result = game.ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(slot_id, game.Players.LocalPlayer)
        OrionLib:MakeNotification({
            Name = "Ripp3rs Hub",
            Content = "Slot saved.",
            Image = "rbxassetid://12576176007",
            Time = 5
        })
        until result
        getgenv().block_save = true
  	end    
})





-- Server Hop
SettingsSec:AddButton({
	Name = "Server Hop",
	Callback = function()
		OrionLib:MakeNotification({
			Name = "Server Hop",
			Content = "Attempting to hop servers",
			Image = "rbxassetid://4483345998",
			Time = 5
		})
		local placeId = "13822889"
		game:GetService("TeleportService"):Teleport(placeId)
	end
})





-- ReJoin Server
SettingsSec:AddButton({
    Name = "Rejoin Server",
    Callback = function()
    local success, errorMessage = pcall(function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
    end)
    if not success then
    OrionLib:MakeNotification({
    Name = "Error",
    Content = "Failed to rejoin server: " .. errorMessage,
    Image = "rbxassetid://4483345998",
    Time = 5
    })
else
    OrionLib:MakeNotification({
    Name = "Rejoin",
    Content = "Attempting to rejoin the server",
    Image = "rbxassetid://4483345998",
    Time = 5
    })
    end
    end
    })





OrionLib:Init()
